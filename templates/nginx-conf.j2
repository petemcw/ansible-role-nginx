# {{ ansible_managed }}
#
# https://gist.github.com/gwillem/cd5ae6845fa33aa0d481
#
#----------------------------------------------------------------------
#  http://wiki.nginx.org/NginxMainModule
#----------------------------------------------------------------------
user {{ nginx_user }} {{ nginx_group }};
{% if ansible_processor_cores|int >= 4 %}
worker_processes 4;
{% else %}
worker_processes {{ ansible_processor_cores }};
{% endif %}
pid {{ nginx_pid }};

#----------------------------------------------------------------------
# http://wiki.nginx.org/NginxEventsModule
#----------------------------------------------------------------------
events {
    worker_connections {{ nginx_worker_connections }};
{% if ansible_processor_cores|int >= 2 %}
    accept_mutex on;
{% else %}
    accept_mutex off;
{% endif %}
}

#----------------------------------------------------------------------
# http://wiki.nginx.org/NginxHttpCoreModule
#----------------------------------------------------------------------
http {
    include {{ nginx_config_dir }}/mime.types;
    default_type application/octet-stream;

    log_format main  '$remote_addr - $remote_user [$time_local] $request '
                     '"$status" $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
{% if nginx_cache_enabled|bool == true %}

    log_format cache '***$time_local '
                     'Cache Status: "$upstream_cache_status" '
                     'Cache-Control: $upstream_http_cache_control '
                     'Expires: $upstream_http_expires '
                     '"$request" ($status) in $request_time';
{% endif %}

{% if nginx_utf8 %}
    charset utf-8;
{% endif %}

    # compression
{% if nginx_gzip|bool == true %}
    gzip on;
{% else %}
    gzip off;
{% endif %}
    gzip_http_version {{ nginx_gzip_http_version }};
    gzip_types{% for type in nginx_gzip_types %} {{ type }}{% endfor %};
    gzip_disable "{{ nginx_gzip_disable }}";

    # general options
{% for k,v in nginx_http_params.iteritems() %}
    {{ k }} {{ v }};
{% endfor %}

    # GeoIP support is included in the Ubuntu 12.04 Nginx.
    # This enables logging, and the following:
    #    if ($geoip_country_code ~ (CN|ZW) ) {
    #      return 403;
    #    }
    #geoip_country /usr/share/GeoIP/GeoIP.dat;

{% if nginx_cache_enabled|bool == true %}
    # caching
    open_file_cache max={{ nginx_cache_open_file_cache_max }} inactive={{ nginx_cache_open_file_cache_inactive }};
    open_file_cache_valid {{ nginx_cache_open_file_cache_valid }};
    open_file_cache_min_uses {{ nginx_cache_open_file_cache_min_uses }};
    open_file_cache_errors {{ nginx_cache_open_file_cache_errors }};
    proxy_read_timeout {{ nginx_cache_proxy_read_timeout }};
    fastcgi_cache_path {{ nginx_fastcgi_cache_dir }} levels={{ nginx_fastcgi_cache_levels }} keys_zone={{ nginx_fastcgi_cache_keys_zone }} max_size={{ nginx_fastcgi_cache_max_size }} inactive={{ nginx_fastcgi_cache_inactive }};
{% endif %}

    # detect https
    map $scheme $fastcgi_https {
      default "";
      https on;
    }

    # detect whether a request comes from a human, a search crawler or another bot.
    map $http_user_agent $is_non_search_bot {
        default '';
        ~*(google|bing|pingdom|monitis.com|Zend_Http_Client) '';
        ~*(http|crawler|spider|bot|search|ForusP|Wget/|Python-urllib|PHPCrawl|bGenius) 'bot';
    }

    # rate limit bots (that are not search spiders) to one PHP request per second.
    # An empty '$limit_bots' would disable rate limiting for this request
    limit_req_zone $is_non_search_bot zone=bots:1m rate=1r/s;
    limit_req_log_level error;

    # PHP-FPM
    upstream phpfpm {
{% if nginx_fastcgi_use_socket|bool == true %}
      server unix:{{ nginx_fastcgi_socket }};
{% else %}
      server {{ nginx_fastcgi_listen_tcp }};
{% endif %}
    }

    # include active sites
    include {{ nginx_config_dir }}/sites-enabled/*;
}
