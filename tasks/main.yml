---
# Defines tasks to install and configure Nginx webserver

- name: Include the OS specific varibles
  include_vars: '{{ ansible_os_family }}.yml'
  tags:
    - nginx

- name: Remove Apache packages for Debian derivatives
  apt: >
    pkg={{ item }}
    state=absent
    purge=yes
  with_items: apache_packages
  when: ansible_os_family == 'Debian'
  tags:
    - nginx

- name: Add PPA repository for Debian derivatives
  apt_repository: >
    repo='ppa:nginx/stable'
  when: ansible_os_family == 'Debian'
  tags:
    - nginx

- name: Install packages for Debian derivatives
  apt: >
    pkg={{ item }}
    update_cache=yes
    state=latest
  with_items: nginx_packages
  when: ansible_os_family == 'Debian'
  tags:
    - nginx

- name: Ensure proper directories exist
  file: >
    path={{ item }}
    state=directory
    mode=0755 owner=root group=root
  with_items:
    - '{{ nginx_config_dir }}/ssl'
    - '{{ nginx_config_dir }}/conf.d'
    - '{{ nginx_config_dir }}/sites-enabled'
    - '{{ nginx_config_dir }}/sites-available'
    - '{{ nginx_fastcgi_cache_dir }}'
  tags:
    - nginx

- name: Remove default files
  file: >
    path={{ item }}
    state=absent
  with_items:
    - '{{ nginx_config_dir }}/sites-enabled/default'
    - '{{ nginx_config_dir }}/sites-available/default'
    - '/var/www/index.html'
  when: ansible_os_family == 'Debian'
  tags:
    - nginx

- name: Write main configuration templates
  template: >
    src={{ item.src }}
    dest={{ item.dest }}
    mode=0644 owner=root group=root
    backup=yes
  with_items:
      - { src: 'nginx-conf.j2',               dest: '{{ nginx_config_dir }}/nginx.conf' }
      - { src: 'fastcgi_params.j2',           dest: '{{ nginx_config_dir }}/fastcgi_params' }
      - { src: 'conf-d-drop-conf.j2',         dest: '{{ nginx_config_dir }}/conf.d/drop.conf' }
      - { src: 'conf-d-assets-conf.j2',       dest: '{{ nginx_config_dir }}/conf.d/assets.conf' }
      - { src: 'platforms/magento-conf.j2',   dest: '{{ nginx_config_dir }}/conf.d/magento.conf' }
      - { src: 'platforms/drupal-conf.j2',    dest: '{{ nginx_config_dir }}/conf.d/drupal.conf' }
      - { src: 'platforms/wordpress-conf.j2', dest: '{{ nginx_config_dir }}/conf.d/wordpress.conf' }
  notify:
    - restart nginx
  tags:
    - nginx

- name: Write vhost configuration templates
  template: >
    src=vhost-conf.j2
    dest={{ nginx_config_dir }}/sites-available/{{ item['server']['server_name']|replace('.', '-') }}.conf
    mode=0644 owner=root group=root
    backup=yes
  with_items: nginx_vhosts
  when: nginx_vhosts|lower != 'none'
  notify:
    - reload nginx
  tags:
    - nginx

- name: Create a basic auth users
  htpasswd: >
    path={{ nginx_config_dir }}/.htpasswd
    name={{ item['user']['name'] }}
    password={{ item['user']['pass'] }}
    create=yes
    state=present
    mode=0640 owner=root group={{ nginx_group }}
  with_items: nginx_htpasswd_users
  when: nginx_htpasswd_users is defined and nginx_htpasswd_users|lower != 'none'
  tags:
    - nginx

- name: Start on server boot
  service: >
    name={{ nginx_service }}
    state=started
    enabled=yes
  tags:
    - nginx
